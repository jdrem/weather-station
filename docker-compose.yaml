version: '3.3'

services: 
    
  mysql:
    image: mysql
    container_name: weather-db
    hostname: 'DB'
    restart: unless-stopped
    deploy:
       replicas: 1
    volumes:
      - type: bind
        source: "${HOME}/mysql"
        target: /var/lib/mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
      MYSQL_DATABASE: weather
      MYSQL_USER: wuser
    secrets:
      - mysql_root_password
      - mysql_user_password

  httpd:
    image: httpd:2.4
    container_name: weather-httpd
    volumes:
      - type: bind
        source: /usr/share/weather-station/htconfig/httpd.conf
        target: /usr/local/apache2/conf/httpd.conf
      - type: bind
        source: /usr/share/weather-station/htdocs
        target: /usr/local/apache2/htdocs
      - type: bind
        source: "${HOME}/secrets/fullchain.pem"
        target: /usr/local/apache2/conf/server.crt
      - type: bind
        source: "${HOME}/secrets/privkey.pem"
        target: /usr/local/apache2/conf/server.key
    ports:
      - 80:80
      - 443:443

  rabbitmq:
    image: rabbitmq
    container_name: weather-station-rabbitmq
    hostname: RABBITMQ
    volumes:
      - type: bind
        source: /usr/share/weather-station/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: /usr/share/weather-station/rabbitmq/definitions.json
        target: /etc/rabbitmq/definitions.json
      - type: bind
        source: /usr/share/weather-station/rabbitmq/advanced.config
        target: /etc/rabbitmq/advanced.config
      - type: bind
        source: "${HOME}/secrets/rabbitmq-passphrase"
        target: /etc/rabbitmq/passphrase
      - type: bind
        source: "${HOME}/secrets/rootCA.crt"
        target: /etc/rabbitmq/rootCA.crt
      - type: bind
        source: "${HOME}/secrets/rabbitmq.crt"
        target: /etc/rabbitmq/rabbitmq.crt
      - type: bind
        source: "${HOME}/secrets/rabbitmq.key"
        target: /etc/rabbitmq/rabbitmq.key
    ports:
      - 5672:5672

  app:
    image: jdremillard/weather-station-app:latest
    container_name: weather-station-app
    volumes:
      - type: bind
        source: "${HOME}/secrets/ssl.p12"
        target: /secrets/ssl.p12
      - type: bind
        source: "${HOME}/secrets/truststore.jks"
        target: /secrets/truststore.jks"
      - type: bind
        source: "${HOME}/secrets/weather-station.p12"
        target: /secrets/weather-station.p12
    environment:
      WEATHER_DB_URL: jdbc:mysql://DB:3306/weather
      WEATHER_DB_USER: wuser
      WEATHER_DB_PASSWORD: DOCKER-SECRET:mysql_user_password
      RABBITMQ_HOST: RABBITMQ
      KEYSTORE_PASSWORD: DOCKER-SECRET:keystore_password
      TRUSTSTORE_PASSWORD: DOCKER-SECRET:truststore_password
      RABBITMQ_KEYSTORE_PASSWORD: DOCKER-SECRET:rabbitmq_keystore_password
    ports:
      - 8098:8098
    secrets:
      - mysql_user_password
      - user_names
      - admin_names
      - keystore_password
      - truststore_password
      - rabbitmq_keystore_password
    depends_on:
      - mysql
      - rabbitmq

  updater:
    image: jdremillard/weather-station-updater:latest
    container_name: weather-station-updater
    volumes:
      - type: bind
        source: "${HOME}/secrets/server.p12"
        target: /secrets/server.p12
      - type: bind
        source: "${HOME}/secrets/truststore.jks"
        target: /secrets/truststore.jks"
      - type: bind
        source: "${HOME}/secrets/weather-updater.p12"
        target: /secrets/weather-updater.p12
    environment:
      RABBITMQ_HOST: RABBITMQ
      USER_NAMES: DOCKER-SECRET:updater_user_names
      ADMIN_NAMES: DOCKER-SECRET:updater_admin_names
      KEYSTORE_PASSWORD: DOCKER-SECRET:keystore_password
      TRUSTSTORE_PASSWORD: DOCKER-SECRET:truststore_password
      RABBITMQ_KEYSTORE_PASSWORD: DOCKER-SECRET:rabbitmq_keystore_password
    ports:
      - 8099:8099
    secrets:
      - updater_user_names
      - updater_admin_names
      - keystore_password
      - truststore_password
      - rabbitmq_keystore_password
    depends_on:
      - rabbitmq

secrets:
     mysql_root_password:
        file: "${HOME}/secrets/mysql_root_password"
     mysql_user_password:
        file: "${HOME}/secrets/mysql_user_password"
     rest_user_password:
        file: "${HOME}/secrets/rest_user_password"
     rest_admin_user_password:
        file: "${HOME}/secrets/rest_admin_user_password"
     updater_user_names:
       file: "${HOME}/secrets/updater_user_names"
     updater_admin_names:
       file: "${HOME}/secrets/updater_admin_names"

